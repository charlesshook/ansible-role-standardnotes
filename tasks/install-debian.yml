---
- name: "Create stanardnotes working directory"
  ansible.builtin.file:
    state: directory
    path: '{{ standardnotes_working_directory }}'
    mode: "0700"

- name: "Create stanardnotes jwt secret"
  ansible.builtin.shell: 
    cmd: 'openssl rand -hex 32'
    chdir: "{{ standardnotes_working_directory }}/"
  register: jwt_secret_output

- name: "Set jwt secret variable"
  ansible.builtin.set_fact:
    standardnotes_auth_jwt_secret: '{{ jwt_secret_output.stdout }}'

- name: "Create stanardnotes server encryption server key"
  ansible.builtin.shell: 
    cmd: 'openssl rand -hex 32'
    chdir: "{{ standardnotes_working_directory }}/"
  register: server_encryption_server_key

- name: "Set server encryption server key"
  ansible.builtin.set_fact:
    standardnotes_auth_server_encryption_server_key: '{{ server_encryption_server_key.stdout }}'

- name: "Create stanardnotes valet token secret"
  ansible.builtin.shell: 
    cmd: 'openssl rand -hex 32'
    chdir: "{{ standardnotes_working_directory }}/"
  register: valet_token_secret

- name: "Set valet token secret"
  ansible.builtin.set_fact:
    standardnotes_valet_token_secret: '{{ valet_token_secret.stdout }}'

- name: "Get LocalStack bootstrap script"
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/standardnotes/server/main/docker/localstack_bootstrap.sh'
    dest: '{{ standardnotes_working_directory }}/localstack_bootstrap.sh'
    mode: "0700"
    
- name: "Create docker-compose file"
  ansible.builtin.template:
     src: templates/docker-compose.yml.j2
     dest: "{{ standardnotes_working_directory }}/docker-compose.yml"
     mode: "0700"

- name: "Create .env file"
  ansible.builtin.template:
     src: templates/env.j2
     dest: "{{ standardnotes_working_directory }}/.env"
     mode: "0700"

- name: "Start standardnotes with docker compose"
  ansible.builtin.shell: 
    cmd: 'docker compose pull && docker compose up -d'
    chdir: "{{ standardnotes_working_directory }}/"